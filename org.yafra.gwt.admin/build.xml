<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<!-- ant script for:  org.yafra gwt admin app -->
<!-- project name:    org.yafra.gwt.admin -->
<!-- author:          yafra info@yafra.org -->
<!-- source control:  git -->
<!-- @author Yafraorg -->
<project name="org.yafra.gwt.admin" default="war" basedir=".">
  <!-- Arguments to gwtc and devmode targets -->
  <property name="gwt.args" value="" />
 
	
	<!-- yafra.org settings -->
	<property environment="env"/>
	<property name="gwt.module.name" value="org.yafra.gwt.admin.AdminEntryPoint"/>
	<property name="war.name" value="org.yafra.gwt.admin.war"/>
	<property name="build.dir" location="build"/>
	<property name="deploy.dir" value="${env.WORKNODE}/apps" />
	<property name="coresrc.dir" value="${env.JAVANODE}/org.yafra.server.core/src/main/java" />
	<property name="MAVENREPO" value="${env.MAVENREPO}"/>
	<property name="debuglevel" value="source,lines,vars"/>
	<property name="target" value="1.7"/>
	<property name="source" value="1.7"/>

  <!-- Configure path to GWT SDK -->
  <property name="gwt.sdk" location="/work/eclipse/eclipse-jee/plugins/com.google.gwt.eclipse.sdkbundle_2.6.0/gwt-2.6.0" />

  <path id="project.class.path">
    <pathelement location="war/WEB-INF/classes"/>
    <pathelement location="${gwt.sdk}/gwt-user.jar"/>
    <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
    <!-- Add any additional non-server libs (such as JUnit) -->
    <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
  </path>

  <target name="libs" description="Copy libs to WEB-INF/lib">
	<mkdir dir="war/WEB-INF/lib" />
	<copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
	<copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet-deps.jar" />
	<!-- Add any additional server libs that need to be copied -->
	<copy todir="war/WEB-INF/lib" file="${env.WORKNODE}/bin/serverdirectclient-1.0-jar-with-dependencies.jar"/>
  </target>

  <target name="javac" depends="libs" description="Compile java source to bytecode">
    <mkdir dir="war/WEB-INF/classes"/>
    <javac srcdir="src" includes="**" encoding="utf-8"
        destdir="war/WEB-INF/classes"
        source="1.7" target="1.7" nowarn="true"
        debug="true" debuglevel="lines,vars,source">
      <classpath refid="project.class.path"/>
    </javac>
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="gwtc" depends="javac" description="GWT compile to JavaScript (production mode)">
    <copy todir="src/org/yafra/interfaces">
      <fileset dir="${coresrc.dir}/org/yafra/interfaces"/>
    </copy>
    <copy todir="src/org/yafra/model">
      <fileset dir="${coresrc.dir}/org/yafra/model"/>
    </copy>
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
      </classpath>
      <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
      <jvmarg value="-Xmx256M"/>
      <arg line="-war"/>
      <arg value="war"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg line="${gwt.args}"/>
      <arg value="${gwt.module.name}"/>
    </java>
  	<delete dir="src/org/yafra/model" />
  	<delete dir="src/org/yafra/interfaces" />
  </target>

  <target name="devmode" depends="javac" description="Run development mode">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
      </classpath>
      <jvmarg value="-Xmx256M"/>
      <arg value="-startupUrl"/>
      <arg value="YafraAdmin.html"/>
      <arg line="-war"/>
      <arg value="war"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg line="${gwt.args}"/>
      <arg value="${gwt.module.name}"/>
    </java>
  </target>

  <target name="hosted" depends="devmode" description="Run development mode (NOTE: the 'hosted' target is deprecated)" />

  <target name="build" depends="gwtc" description="Build this project" />

  <target name="war" depends="build" description="Create a war file">
    <zip destfile="${deploy.dir}/${war.name}" basedir="war"/>
  </target>

  <target name="clean" description="Cleans this project">
    <delete dir="gwt-unitCache" failonerror="false" />
    <delete dir="war/WEB-INF/classes" failonerror="false" />
    <delete dir="war/WEB-INF/deploy" failonerror="false" />
    <delete dir="war/org_yafra_gwt_admin" failonerror="false" />
    <delete dir="${build.dir}" failonerror="false" />
   </target>

</project>
